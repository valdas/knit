#!/opt/local/bin/gawk -f 

# This file was auto-generated by KNIT. Do not edit this file! 
# Built on Mon Jan 25 09:22:37 EST 2010 by timm. 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# trim.awk 
 function trim(s) {
	sub(/^[ \t\r\n]*/,"",s)
	sub(/[ \t\r\n]*$/,"",s)
	return s
 } 

# math.awk 
 BEGIN { Pi = 3.14159265
         E  = 2.71828183 
       }
 function oddp(x)  { return (x % 2) }
 function evenp(x) { return (! oddp(x)) }
 function round(x) { return int(x + 0.5) }

# slots.awk 
 function slots(slotsFile,frameFile,      values,sep) {
     sep="``"
     loadSlots(slotsFile,sep,values)   
     fillFrame(frameFile,sep,values)
 }
 function loadSlots(slots,sep,values,   n,i,all) {
     n=slurp(slots,all,sep)
     for(i=2; i<=n; i += 2) 
	 values[trim(all[i])] = trim(all[i+1]);
 }
 function fillFrame(frame,sep,values,   all,n,i) {
     print fillFrame2String(frame,sep,values)
 }
 function fillFrame2String(frame,sep,values,   all,n,i,str) {
     n=slurp(frame,all,sep);
     for(i=1; i<=n; i++)  
	 str = str sprintf("%s", (oddp(i) ? all[i] : fillSlot(all[i],values)))
     return str
 } 
 function fillSlot(str,values) {
     return (str ~ /;/ ? slotsPlugIns(str,values) : values[str])
}
