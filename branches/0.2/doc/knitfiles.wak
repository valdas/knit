# -*- mode: Awk; -*-  vim: set filetype=awk : 
#
# This file is part of KNIT; copyright (C) 2010 by Tim Menzies
# tim@menzies.us.
#
# KNIT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# KNIT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with KNIT.  If not, see <http://www.gnu.org/licenses/>.

Inside KNIT

KNIT divides into _core_ and _apps_  (application) directories.
_App_ directories have special sub-directories (`_etc/tests`) that
handle the KNIT test engine.  

This page describes those directories and files, focusing on what
files need changing to achieve common tasks.

Core Directories
================

The core directories are:

 KNIT
 |-- doc
 |-- etc
 |-- lib
 |   |-- awk
 |   |-- m4
 |   |-- make
 |   `-- sh
 |-- share
 |   |-- img
 |   `-- pdf
 |-- site
 |   |-- etc
 |   |   `-- themes
 |   |       `-- EWnF
 |   |           `-- img
 |   `-- src
 |       `-- old

KNIT
----

Makefile
++++++++

The root of the KNIT directories contains a Makefile that:

1. Installs the whole system via `make install`. Note: this command needs only to be called once, when KNIT is first downloaded.
2. Updates and commit the whole system via `make`. 
3. Forces a rebuild of everything via `make -B` (warning, may be slow).

Note: this Makefile knows very little about KNIT. For the most part, it just changes to different sub-directories can calls `make` there.
Hence, you should
update this file whenever you build a new app (so it knows how to build that app).

head
++++

`Head` is a file containing a standard header/copyright notice to be included at the start of all KNIT files.

doc
---

This is the KNIT documentation project. It contains
files written in a [?literate shorthand for quick HTML markup].

To update the documentation:

1. Change to this directory.
2. Write a new `.wak` file in this directory.
3. Execute `make builds`.

Note that this last step may ask you to update  file `../site/etc/tags.txt`. This file is discussed below.

doc/faqs.html
+++++++++++++

Update this file to update the faqs.

etc
---

Stores various system config files.

etc/copyrite.txt
++++++++++++++++

A standard header to be added on top of all build files.

etc/dotemacs
++++++++++++

An EMACS configuration file to handle certain KNIT idioms (e.g. do not indent text with tabs: use spaces instead).

 (load "/Users/timm/opt/knit/etc/dotemacs")

etc/dotknitrc
+++++++++++++

A BASH configuration file to set up important KNIT variables. Change this file if your Makefiles need new or different envrionment variables.

To use this file, add something like this line to `$HOME/.emacs` (making the appropriate pathname changes):

 . $HOME/opt/knit/etc/dotknitrc $HOME/opt/knit/etc local

Note that the keyword `local` at the end of the above command. Currently `etc/dotknitrc` has conditionals that may set special variables,
	 if local conditions demand it.  Change those conditionals if we find site-specific KNIT install requirements.

lib
---

Contains the core scripts of KNIT.

lib/make
+++++++++

Contains the core scripts of KNIT. To build new language bindings for KNIT, copy and modify (e.g.) `awk.mk` to create `newlanguage.mk`.

XXX

Apps
====

Standard Structure
------------------
 app
 |-- Makefile
 |-- app.wak
 `-- etc
     `-- tests
	     |-- eg1
	     |-- eg2
		 ...

Standard Apps
-------------

Helloworld
+++++++++++

_helloworld_

Penny
+++++

Quill
+++++


