# -*- mode: Awk; -*-  vim: set filetype=awk : 

tags

Reads a _tags file_, once, describing a set of web pages. Adds those tags to the top of the tagged pages.

Synopsis
========

Load a tags file and build the working memory.

    loadTags(tagFile,file,title,tags,sgat)

Print the tags for a web page. Uses the working memory buit above.

    print tag(page,file,title,tags,sgat)

Working memory
--------------

file[stem] : return the full _path_ of the file whose's stem is _stem_.

title\[path\] : returns the title of file at _path_.

tags[path,n\] :holds the _n_-th tag of a file at _path_.

sgat[tags,n\] : reverse of _tags_. holds the _n_-th file of  a _tag_.

Code
====

Uses 
----

@uses basename phrases o trim stack

Main
----

 function loadTags(ins,file,title,tags,sgat,   \
                       line,items,n,i,\
                       _FILENAME,_FNR,_NF,_NR,_RS,_FS ) {
     _FILENAME=FILENAME; _FNR=FNR; _NF=NF; _NR=NR; _RS=RS; _FS=FS;
     RS="\n"; FS=";";
     while((getline line < ins) > 0) {  
         line = trim(line)
         n = phrases(line,";",items)
         if (n) 
             tagLine(items,n,file,title,tags,sgat); 
     }
     FILENAME=_FILENAME; FNR=_FNR; NF=_NF; NR=_NR; RS=_RS; FS=_FS;
 } 
 function tagLine(items,n,file,title,tags,sgat,  dirname,f,i,name) {
      dirname = items[1]
      name    = items[n]
      title[dirname] = name
      f    = basename(dirname)
      file[gensub(/\..*/,"","g",f)] = dirname; 
      for(i=2;i<n;i++) {
          push2(tags,dirname,items[i]); # files to cats
          push2(sgat,items[i],dirname); # cats to files
      }
  } 

Author
======

Tim Menzies
