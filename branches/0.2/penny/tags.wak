# -*- mode: Awk; -*-  vim: set filetype=awk : 

tags

Reads a _tags file_, once, describing a set of web pages. Adds those tags to the top of the tagged pages.

Synopsis
========

Load a tags file and build the working memory.

    loadTags(tagFile,file,title,tags,sgat)

Print the tags for a web page. Uses the working memory buit above.

    print tag(page,file,title,tags,sgat)

Working memory
--------------

file[stem] : return the full _path_ of the file whose's stem is _stem_.

title\[path\] : returns the title of file at _path_.

tags[path,n\] :holds the _n_-th tag of a file at _path_.

sgat[tags,n\] : reverse of _tags_. holds the _n_-th file of  a _tag_.

Code
====

Uses 
----

@uses basename phrases o trim stack

Main
----

 function loadTags(ins,file,title,tags,sgat,   oldRS,oldFS,line,items,n,i) {
     oldRS=RS; oldFS=FS;
     RS="\n"; FS=";";
     print ins
     while((getline line < ins) > 0) {  
         line = trim(line)
         n = phrases(line,";",items)
         o(items,"phrases")
         print n " [" line "]"
         if (n) {
             tagLine(items,n,file,title,tags,sgat); 
             o(file,"file")
             o(title,"title")
             o(tags,"tags")
             o(sgat,"stag")
             return 1
         }
     }
     RS=oldRS; FS=oldFS
 }
 function tagLine(items,n,file,title,tags,sgat,  dirname,f,i,name) {
     dirname = items[1]
     name    = items[n]
     title[dirname] = name
     f    = basename(dirname)
     print f
     file[gensub(/\..*/,"","g",f)] = dirname; 
     for(i=2;i<n;i++) {
         push2(tags,dirname,items[i]); # files to cats
         push2(sgat,items[i],dirname); # cats to files
     }
 }

Author
======

Tim Menzies
