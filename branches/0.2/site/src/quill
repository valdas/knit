#!/opt/local/bin/gawk -f 

# This file was auto-generated by KNIT. Do not edit this file! 
# Built on Mon Jan 25 09:04:36 EST 2010 by timm. 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# deShell.awk 
 function deShell(str) {
     gsub(/["`\$;\|&><]/,"",str);
     return str
 }

# slurp.awk 
 function slurp(com,all, sep) { 
     return split(slurp2String(com),
		  all, 
		  (sep ? sep : "\n")) 
 }
 function slurp2String(com,    txt,filename,fnr,nf,nr,rs,fs ) {
     filename=FILENAME;fnr=FNR;nf=NF;nr=NR;rs=RS;fs=FS;
     RS="\r\r\n"; FS="\r\r\n"; # change globals 
     com = deShell(com)        # make 'com0' safe
     com | getline txt ;       # everything is in 'txt'
     close(com);               # close pipe
     FILENAME=filename;FNR=fnr;NF=nf;NR=nr;RS=rs;FS=fs;
     return txt                # the end
 }

# o.awk 
 function o(a, str,control,   i,com) {
     str = str ? str : "array"
     if (control ~ /^[0-9]/)  {
         if (control==0)
             o1(a,str)
	 else
             for(i=1;i<=control;i++)
                 print oprim(str,i,a)
     } else
	 if (0 in a)        # sometimes i store array size in a[0]
	     o(a,str,a[0])         
         else {
             com = control ? control : " -n -k 2" 
             com = "sort " com  " #" rand(); # ensure com is unique
             for(i in a)
                 print oprim(str,i,a) | com;
             close(com); }
 }
 function oprim(str,i,a,  j) {
     j=i
     gsub(SUBSEP,",",j) 
     return str "[ " j " ]\t=\t [ " a[i] " ]"
 }
 function oo(a,str, i) {
     for(i in a)
         print oprim(str,i,a)
 }
 function oos(a1,str1,a2,str2,a3,str3,a4,str4,a5,str5) {
     if(str1) oo(a1,str1);
     if(str2) oo(a2,str2);
     if(str3) oo(a3,str3);
     if(str4) oo(a4,str4);
     if(str5) oo(a5,str5)
 }
 function os(a1,str1,a2,str2,a3,str3,a4,str4,a5,str5) {
     if(str1) o(a1,str1);
     if(str2) o(a2,str2);
     if(str3) o(a3,str3);
     if(str4) o(a4,str4);
     if(str5) o(a5,str5)
 }

# wget.awk 
 function demoWget(   n,all,url) {
     url="knit.googlecode.com/svn/branches/0.2/quill/etc/tests/demoWget.rss"
     n=wget(url,all,">")
     o(all,"wget",n) 
 }
 function wget(url,all,sep) { 
    return slurp("wget -q -O - http://" url,all,sep) 
 }
