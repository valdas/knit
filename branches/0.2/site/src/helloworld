#!/usr/bin/gawk -f 

# This file was auto-generated by KNIT. Do not edit this file! 
# Built on Wed Sep 29 18:13:16 EDT 2010 by aotieno1. 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# http://artofawk.net/?copyleft 
 function copyleft() {
    about();
    print ""
    print "This program is free software: you can redistribute it and/or modify"
    print "it under the terms of the GNU General Public License as published by"
    print "the Free Software Foundation, either version 3 of the License, or"
    print "(at your option) any later version."
    print ""
    print "This program is distributed in the hope that it will be useful,"
    print "but WITHOUT ANY WARRANTY; without even the implied warranty of"
    print "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
    print "GNU General Public License for more details."
    print ""
    print "You should have received a copy of the GNU General Public License"
    print "along with this program.  If not, see <http://www.gnu.org/licenses/>."
    print ""
 }
 function about() {
    print Opt["What"] " : " Opt["Why"];
    print "Copyright " Opt["When"] " by " Opt["Who"] " (GPL version 3)";
 }

# http://artofawk.net/?warning 
 function warning(str) {
     print "# ERROR: " str   >> "/dev/stderr";
     fflush("/dev/stderr");
 }

# http://artofawk.net/?barph 
 function barph(str) {
     warning(str)
     exit 1; 
 }

# http://artofawk.net/?trim 
 function trim(s) {
	sub(/^[ \t\r\n]*/,"",s)
	sub(/[ \t\r\n]*$/,"",s)
	return s
 } 

# http://artofawk.net/?default 
 function default(value, d) {
	 return value=="" ? d: value
 }

# http://artofawk.net/?s2a 
 function s2a(str,a,  sep,blankp,  tmp,n,i) {
    sep= default(sep,",")
    blankp = default(blankp,0)
    n= split(str,tmp,sep)
    for(i=1;i<=n;i+=2) 
        if (blankp)
            a[tmp[i]]= tmp[i+1]
        else
            a[trim(tmp[i])]= trim(tmp[i+1]);
    return n/2
 }

# http://artofawk.net/?options 
 function opt(x) {
     if  (x in Opt) 
         return Opt[x] 
     else
         barph(Opt["What"] " option ["x"] unknown")
 }
 function ok2go(opt,str) { # returns 0 if bad options
     s2a("a=;c=;h=;" str,opt,"[=;]")
     ARGC = ok2go1(opt,ARGV,ARGC)
     if (opt("c")) exit copyleft();
     if (opt("a")) exit about();    
     if (opt("h")) exit help();
     return 1
 }
 function ok2go1(opt,input,n,  key,i,j,k,tmp) {
     for(i=1;i<=n;i++)  { # 1: explore argstill no more flags
	 key = input[i]
	 if (sub(/^[-]+/,"",key))  { # 1a: we have a new flag
	     if (key in opt)         # 1b: if legal flag, change its value
		 	# 1c: if upper case flag grab value from command line 
		 opt[key] = (key ~ /^[A-Z]/) ? input[++i] : 1
	     else 
		 barph("-"key" unknown. Try -h for help.")
	 } else { 
	     i--; break 
	 }
     }
     for(j=i+1;j<=n;j++)  # 2: clear the flags from n, input 
	 tmp[j-i]=input[j]
     split("",input,"")
     for(k in tmp) 
	 input[k] = tmp[k]
     n -= i
     return n
 }

# http://artofawk.net/?prints 
 function prints(a0,b0,c0,d0,e0,f0,g0,h0,i0,j0,k0,l0,m0,n0,o0,p0,q0,r0,s0,t0,u0,v0,w0,x0,y0,z0,\
                 a1,b1,c1,d1,e1,f1,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s1,t1,u1,v1,w1,x1,y1,z1,\
                 a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2,\
                 a3,b3,c3,d3,e3,f3,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3,q3,r3,s3,t3,u3,v3,w3,x3,y3,z3,\
                 a4,b4,c4,d4,e4,f4,g4,h4,i4,j4,k4,l4,m4,n4,o4,p4,q4,r4,s4,t4,u4,v4,w4,x4,y4,z4,\
                 a5,b5,c5,d5,e5,f5,g5,h5,i5,j5,k5,l5,m5,n5,o5,p5,q5,r5,s5,t5,u5,v5,w5,x5,y5,z5,\
                 a6,b6,c6,d6,e6,f6,g6,h6,i6,j6,k6,l6,m6,n6,o6,p6,q6,r6,s6,t6,u6,v6,w6,x6,y6,z6,\
                 a7,b7,c7,d7,e7,f7,g7,h7,i7,j7,k7,l7,m7,n7,o7,p7,q7,r7,s7,t7,u7,v7,w7,x7,y7,z7,\
                 a8,b8,c8,d8,e8,f8,g8,h8,i8,j8,k8,l8,m8,n8,o8,p8,q8,r8,s8,t8,u8,v8,w8,x8,y8,z8,\
                 a9,b9,c9,d9,e9,f9,g9,h9,i9,j9,k9,l9,m9,n9,o9,p9,q9,r9,s9,t9,u9,v9) {
   prints26(a0,b0,c0,d0,e0,f0,g0,h0,i0,j0,k0,l0,m0,n0,o0,p0,q0,r0,s0,t0,u0,v0,w0,x0,y0,z0);
   prints26(a1,b1,c1,d1,e1,f1,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s1,t1,u1,v1,w1,x1,y1,z1);
   prints26(a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2);
   prints26(a3,b3,c3,d3,e3,f3,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3,q3,r3,s3,t3,u3,v3,w3,x3,y3,z3);
   prints26(a4,b4,c4,d4,e4,f4,g4,h4,i4,j4,k4,l4,m4,n4,o4,p4,q4,r4,s4,t4,u4,v4,w4,x4,y4,z4);
   prints26(a5,b5,c5,d5,e5,f5,g5,h5,i5,j5,k5,l5,m5,n5,o5,p5,q5,r5,s5,t5,u5,v5,w5,x5,y5,z5);
   prints26(a6,b6,c6,d6,e6,f6,g6,h6,i6,j6,k6,l6,m6,n6,o6,p6,q6,r6,s6,t6,u6,v6,w6,x6,y6,z6);
   prints26(a7,b7,c7,d7,e7,f7,g7,h7,i7,j7,k7,l7,m7,n7,o7,p7,q7,r7,s7,t7,u7,v7,w7,x7,y7,z7);
   prints26(a8,b8,c8,d8,e8,f8,g8,h8,i8,j8,k8,l8,m8,n8,o8,p8,q8,r8,s8,t8,u8,v8,w8,x8,y8,z8);
   prints26(a9,b9,c9,d9,e9,f9,g9,h9,i9,j9,k9,l9,m9,n9,o9,p9,q9,r9,s9,t9,u9);
 }
 function prints26(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z) {
   if (a) {print prints1(a) } else {return 1};
   if (b) {print prints1(b) } else {return 1};
   if (c) {print prints1(c) } else {return 1};
   if (d) {print prints1(d) } else {return 1};
   if (e) {print prints1(e) } else {return 1};
   if (f) {print prints1(f) } else {return 1};
   if (g) {print prints1(g) } else {return 1};
   if (h) {print prints1(h) } else {return 1};
   if (i) {print prints1(i) } else {return 1};
   if (j) {print prints1(j) } else {return 1};
   if (k) {print prints1(k) } else {return 1};
   if (l) {print prints1(l) } else {return 1};
   if (m) {print prints1(m) } else {return 1};
   if (n) {print prints1(n) } else {return 1};
   if (o) {print prints1(o) } else {return 1};
   if (p) {print prints1(p) } else {return 1};
   if (q) {print prints1(q) } else {return 1};
   if (r) {print prints1(r) } else {return 1};
   if (s) {print prints1(s) } else {return 1};
   if (t) {print prints1(t) } else {return 1};
   if (u) {print prints1(u) } else {return 1};
   if (v) {print prints1(v) } else {return 1};
   if (w) {print prints1(w) } else {return 1};
   if (x) {print prints1(x) } else {return 1};
   if (y) {print prints1(y) } else {return 1};
   if (z) {print prints1(z) } else {return 1};
 }
 function prints1(x) { # if starts with a " ", then indent this string
   return x ~ /^ /  ? "       "x : x; 
 }

# http://artofawk.net/?helloworld 
 BEGIN { if (!Test) main() }
 function main() {
     ok2go(Opt, 
	   "What=Hello World;Why=saying hi!;When=2010;Who=Tim Menzies;"	\
	   "To=world;Say=hello;i="); 
     if (! opt("i")) {
	 	print opt("Say") " " opt("To");
	 	exit 
	}
 }
 { print opt("Say") " " opt("To") ", you " $0 "." }
 function help() {
    about()
    prints(" ", "usage: helloworld [OPTIONS] [qualifiers]"," ",
       " -a          About",
	   " -i          Interactive mode. Prints hello, plus",
       "             one qualifier per line of input.",
	   " -To Who     Address the greeting to 'Who'",
	   " -Say What   Start the greeting with 'Say'",
	   " -c          Copyright",
	   " -h          Help");
 }
