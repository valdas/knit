# -*- mode: Awk; -*-  vim: set filetype=awk : 

o

Print an array.

Synopsis
========

   o(array [,string,control])

* If _string_ is given,  print it before each item.
* If _control_ is a positive integer, then print from 1 to _control_.
* If _control_ is zero, the print in any order.
* Else, if the size of the _array_ is stored at location _array[0]_ then print from one to size.
* Else, if _control_ is a string, use it as  an  argument to a UNIX sort command (otherwise,
  just sort numerically by the _array_ values.

Code 
====

 function o(a, str,control,   i) {
     str = str ? str : "array"
     if (control ~ /^[0-9]/)  {
         if (control==0)
             for(i in a)
                 print o1(str,i,a)
	 else
             for(i=1;i<=control;i++)
                 print o1(str,i,a)
     } else
	 if (0 in a)       # before a bug fix in gawk 3.1.7, i used "0"
	     o(a,str,a[0]) # to store the length of the array
         else {
             com = control ? control : " -n -k 2" 
             com = "sort " com  " #" rand(); # ensure com is unique
             for(i in a)
                 print o1(str,i,a) | com;
             close(com); }
 }
 function o1(str,i,a) {
     return str "[ " i " ]\t=\t [ " a[i] " ]"
 }

Author
======

Tim Menzies
