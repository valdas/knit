# -*- mode: Awk; -*-  vim: set filetype=awk : 

myrss

Simple formatter of an RSS stream.

Synopsis
========

    myrss("rss:url;N"  [,between])

Returns the first _N_ items from an rss feed at _url_. 

The functional optionally accepts a between string that is printed 
between each item. The following example prints a "<li>" between each RSS 
item; i.e. it converts a text string into an HTML list.

The code includes a generic loop for reading the stream and a set of _formatting
functions_ that lets a programmer change the presentation of the stream.

Tips
====

When formatting an RSS feed, it it useful to view its
structure. The following command will show that structure. Note that
_myRss_ imports the following structure into an array _all_, one
entry per line.

  wget -q -O - url2RssFeed |  
  gawk 'BEGIN {RS="";FS=">"; getline; 
        for(i=1;i<=NF;i++) print $i}'

Code
====

Demo
----

 function myRssDemo() {  
     print "<ul>"
     print myrss("rss;lawker.blogspot.com/feeds/posts/default?alt=rss;5","<li>\n")
     print "</ul>"
 }

Outputs:

Uses
----

@uses wget

Main 
----

 function myrss(rss, between, tmp) {
     split(rss,tmp,";");
     return myrss1(tmp[2],tmp[3],between);
 }

 function myrss1(feed,max,between,              \
                 date,url,link,description,title,\
                 n,all,sep,out,,seen) {
     n = wget(feed,">",all);
     for(i=1;i<=n; i++) {
	 if (all[i] ~ /^<pubDate/ ) 
	     date = myDate(all,i)
	 else if (all[i] ~ /^<description/) 
	     description = myText(all,i)
	 else if (all[i] ~ /^<title/) 
	     title = mySlot(all,i)
	 else if (all[i] ~ /^<link/) 
	     link = mySlot(all,i)
	 else if (all[i] ~ /^<enclosure/) 
	     url = mySlot(all,i);
	 if (date && description && title && link && url) {
	     out = out sep myReport(url,date,title,link,description);
	     sep = between ? between : "\n";
	     date = description = title = link = url = ""
	     if (++seen >= max) 
		 return out;
	 }}
     return out;
 }

Formatting
-----------

Modify the following formatting functions to change the appearance of each field.

_MySlot_ is the simplet formatter.
 
function mySlot(all,i,    str) {
     str = all[i] 
     sub(/<.*/,"",str);    
     return str 
 }

The other formatters handle special kinds of fields.

 function myDate(all,i, tmp) {
    split(all[i+1],tmp," ");   
    return tmp[3]  " " tmp[2] 
 } 
 function myText(all,i,    str) {
     str = all[i+1] 
     sub(/&lt;.*/,"",str); 
     return str 
 }

Reporter
--------

Modify the following reporting function to change the final output of
the itenm. Note that every field found by _myrss1_ is passed to the function. 
Feel free to ignore all the arguments except the ones you want to display.

 function myReport(url,date,title,link,description);
     return "<a href=\"" url "\">" date "</a>" description
 }
